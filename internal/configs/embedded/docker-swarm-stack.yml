version: "3.8"
services:
  redis:
    image: redis/redis-stack-server:latest
    command: redis-stack-server --requirepass ${REDIS_PASSWORD}
    environment:
      - TZ=UTC
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "10"
    networks:
      - d8x_backend
    deploy:
      replicas: 1
      # placement:
      # constraints:
      # Always run redis on the same node
      # - "node.hostname==worker-1"
  api:
    image: ghcr.io/d8-x/d8x-trader-main:main
    ports:
      # REST API
      - ${MAIN_API_PORT_HTTP:-3001}:${MAIN_API_PORT_HTTP:-3001}
      # Websockets port
      - ${MAIN_API_PORT_WEBSOCKET:-3002}:${MAIN_API_PORT_WEBSOCKET:-3002}
    environment:
      - BROKER_KEY=${BROKER_KEY}
      - BROKER_FEE_TBPS=${BROKER_FEE_TBPS}
      - REMOTE_BROKER_HTTP=${REMOTE_BROKER_HTTP}
      - REDIS_URL=${REDIS_URL:-redis://:thisismypassword@redis:6379/0}
      - CHAIN_ID=${CHAIN_ID:-80001}
      - SDK_CONFIG_NAME=${SDK_CONFIG_NAME:-testnet}
      - CORS_ON=${CORS_ON:-FALSE}
      - MAIN_API_PORT_HTTP=${MAIN_API_PORT_HTTP:-3002}
      - MAIN_API_PORT_WEBSOCKET=${MAIN_API_PORT_WEBSOCKET:-3002}
      - CONFIG_PATH_RPC=/cfg_rpc
    configs:
      - cfg_rpc
    networks:
      - d8x_backend
    deploy:
      replicas: 2
  history:
    image: ghcr.io/d8-x/d8x-trader-history:main
    environment:
      - DATABASE_DSN_HISTORY=${DATABASE_DSN}
      - HISTORY_API_PORT_HTTP=${HISTORY_API_PORT_HTTP:-3003}
      - SDK_CONFIG_NAME=${SDK_CONFIG_NAME}
      - CHAIN_ID=${CHAIN_ID}
      - CORS_ON=${CORS_ON:-FALSE}
      - CONFIG_PATH_RPC=/cfg_rpc_history
      - CONFIG_PATH_REFERRAL_SETTINGS=/cfg_referral
    ports:
      - "${HISTORY_API_PORT_HTTP:-3003}:${HISTORY_API_PORT_HTTP:-3003}"
    logging:
      driver: "json-file"
      options:
        max-size: "5000k"
        max-file: "10"
    deploy:
      replicas: 1
    configs:
      - cfg_rpc_history
      - cfg_referral
    networks:
      - d8x_backend

  referral:
    image: ghcr.io/d8-x/d8x-referral-system:dev
    deploy:
      # Restart 5 times with 60 seconds delay before giving up.
      restart_policy:
        condition: any
        delay: 60s
        max_attempts: 5
        # Do not wait to verify restart
        window: 0s
    environment:
      - DATABASE_DSN_HISTORY=${DATABASE_DSN}
      - BROKER_KEY=${BROKER_KEY}
      - CHAIN_ID=${CHAIN_ID}
      - REMOTE_BROKER_HTTP=${REMOTE_BROKER_HTTP}
      - CONFIG_PATH=/cfg_referral
      - RPC_URL_PATH=/cfg_rpc_referral
      - API_BIND_ADDR=0.0.0.0
      - API_PORT=8080
      - KEYFILE_PATH=/keyfile/
    ports:
      - "${REFERRAL_API_PORT_HTTP:-3004}:8080"
    logging:
      driver: "json-file"
      options:
        max-size: "5000k"
        max-file: "10"
    configs:
      - cfg_rpc_referral
      - cfg_referral
    networks:
      - d8x_backend
    volumes:
      - nfsvol:/keyfile

  candles-pyth-client:
    image: ghcr.io/d8-x/d8x-candles-pyth-client:main
    environment:
      - REDIS_PW=${REDIS_PASSWORD}
      - REDIS_ADDR=redis:6379
      - REDIS_DB_NUM=0
      - CONFIG_PATH=/cfg_candles
    networks:
      - candles
      - d8x_backend
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    configs:
      - cfg_candles
    deploy:
      replicas: 1

  # Candles websockets server
  candles-ws-server:
    image: ghcr.io/d8-x/d8x-candles-ws-server:main
    ports:
      - 3005:8080
    environment:
      - REDIS_PW=${REDIS_PASSWORD}
      - REDIS_ADDR=redis:6379
      # Use different database tha
      - REDIS_DB_NUM=0
      - CONFIG_PATH=/cfg_candles
      - WS_ADDR=0.0.0.0:8080
    networks:
      - candles
      - d8x_backend
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    configs:
      - cfg_candles
    deploy:
      replicas: 1

networks:
  d8x_backend:
    driver: overlay
    name: d8x_backend
    ipam:
      config:
        - subnet: 172.16.2.0/24
  candles:
    driver: overlay
    ipam:
      config:
        - subnet: 172.16.3.0/24
volumes:
  nfsvol:
    external: true
configs:
  cfg_rpc:
    external: true
  cfg_rpc_referral:
    external: true
  cfg_rpc_history:
    external: true
  cfg_referral:
    external: true
  cfg_candles:
    external: true
