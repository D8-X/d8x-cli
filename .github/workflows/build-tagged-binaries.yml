name: Build images on tag push
on:
  push:
    tags: "*"
jobs:
  build-linux:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@master
        with:
          timeZone: UTC
          format: "YYYY-MM-DD HH-mm-ss"
      - name: Run tests
        run: go test ./...
      - name: Build D8X CLI
        run: |
          GOOS=linux go build -o d8x -ldflags='-X "github.com/D8-X/d8x-cli/internal/version.commit=${{ github.ref }}" -X "github.com/D8-X/d8x-cli/internal/version.buildTime=${{ steps.time.outputs.time }}"' main.go
      - name: Tar d8x cli
        run: tar -czvf d8x.tar.gz d8x
      - name: Upload linux build
        uses: actions/upload-artifact@v2
        with:
          name: d8x-linux.tar.gz
          path: d8x.tar.gz

  build-macos:
    permissions:
      contents: write
      packages: write
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@master
        with:
          timeZone: UTC
          format: "YYYY-MM-DD HH-mm-ss"
      - name: Run tests
        run: go test ./...
      - name: Build D8X CLI
        run: |
          GOOS=darwin go build -o d8x -ldflags='-X "github.com/D8-X/d8x-cli/internal/version.commit=${{ github.ref }}" -X "github.com/D8-X/d8x-cli/internal/version.buildTime=${{ steps.time.outputs.time }}"' main.go
      - name: Tar d8x cli
        run: tar -czvf d8x.tar.gz d8x
      - name: Upload macOS build
        uses: actions/upload-artifact@v2
        with:
          name: d8x-macos.tar.gz
          path: d8x.tar.gz

  make-release:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      # By default download all artifacts
      - name: Download binaries
        uses: actions/download-artifact@v2
      - uses: ncipollo/release-action@v1
        name: Make a release
        with:
          artifacts: |
            "d8x-macos.tar.gz"
            "d8x-linux.tar.gz"
